[{"D:\\node\\ex_project\\client\\src\\index.js":"1","D:\\node\\ex_project\\client\\src\\App.js":"2","D:\\node\\ex_project\\client\\src\\reportWebVitals.js":"3","D:\\node\\ex_project\\client\\src\\Components\\Footer.js":"4","D:\\node\\ex_project\\client\\src\\Components\\Header.jsx":"5","D:\\node\\ex_project\\client\\src\\Pages\\HomePage.jsx":"6","D:\\node\\ex_project\\client\\src\\Components\\HomeBanner.jsx":"7","D:\\node\\ex_project\\client\\src\\Components\\HomeProducts.jsx":"8","D:\\node\\ex_project\\client\\src\\Redux\\storeConfig.js":"9","D:\\node\\ex_project\\client\\src\\Redux\\Reducers\\productReducer.js":"10","D:\\node\\ex_project\\client\\src\\Redux\\actionTypes.js":"11","D:\\node\\ex_project\\client\\src\\Components\\ProductMainSection.jsx":"12","D:\\node\\ex_project\\client\\src\\Pages\\ProductViewPage.jsx":"13","D:\\node\\ex_project\\client\\src\\Pages\\CartPage.jsx":"14","D:\\node\\ex_project\\client\\src\\Redux\\Reducers\\cartReducer.js":"15","D:\\node\\ex_project\\client\\src\\Pages\\LoginPage.jsx":"16","D:\\node\\ex_project\\client\\src\\Redux\\Reducers\\userReducer.js":"17","D:\\node\\ex_project\\client\\src\\Pages\\CheckoutPage.jsx":"18","D:\\node\\ex_project\\client\\src\\Pages\\RegisterPage.jsx":"19","D:\\node\\ex_project\\client\\src\\Redux\\Sagas\\rootSaga.js":"20","D:\\node\\ex_project\\client\\src\\Redux\\Sagas\\productSaga.js":"21","D:\\node\\ex_project\\client\\src\\Redux\\Sagas\\cartSaga.js":"22","D:\\node\\ex_project\\client\\src\\Redux\\Sagas\\userSaga.js":"23","D:\\node\\ex_project\\client\\src\\Pages\\PaymentPage.js":"24","D:\\node\\ex_project\\client\\src\\Pages\\OrderDetailPage.jsx":"25","D:\\node\\ex_project\\client\\src\\UserPages\\MyOrders.jsx":"26","D:\\node\\ex_project\\client\\src\\Components\\DashbordHeader.jsx":"27","D:\\node\\ex_project\\client\\src\\Redux\\Sagas\\ordersSaga.js":"28","D:\\node\\ex_project\\client\\src\\Redux\\Reducers\\orderReducer.js":"29","D:\\node\\ex_project\\client\\src\\UserPages\\MyProfile.jsx":"30","D:\\node\\ex_project\\client\\src\\Components\\PrivateRoute.js":"31","D:\\node\\ex_project\\client\\src\\Components\\Loading.jsx":"32"},{"size":628,"mtime":1611494522720,"results":"33","hashOfConfig":"34"},{"size":1636,"mtime":1613042564699,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"34"},{"size":2079,"mtime":1611494304750,"results":"37","hashOfConfig":"34"},{"size":2619,"mtime":1613042349834,"results":"38","hashOfConfig":"34"},{"size":316,"mtime":1611647816256,"results":"39","hashOfConfig":"34"},{"size":2705,"mtime":1611674666764,"results":"40","hashOfConfig":"34"},{"size":2063,"mtime":1613209677331,"results":"41","hashOfConfig":"34"},{"size":1234,"mtime":1612891143537,"results":"42","hashOfConfig":"34"},{"size":1752,"mtime":1612082256000,"results":"43","hashOfConfig":"34"},{"size":1579,"mtime":1612247203394,"results":"44","hashOfConfig":"34"},{"size":4233,"mtime":1613210142385,"results":"45","hashOfConfig":"34"},{"size":253,"mtime":1611479886520,"results":"46","hashOfConfig":"34"},{"size":6523,"mtime":1613210707579,"results":"47","hashOfConfig":"34"},{"size":4445,"mtime":1613210699773,"results":"48","hashOfConfig":"34"},{"size":2390,"mtime":1613041179805,"results":"49","hashOfConfig":"34"},{"size":2387,"mtime":1612928857092,"results":"50","hashOfConfig":"34"},{"size":9357,"mtime":1612700548837,"results":"51","hashOfConfig":"34"},{"size":3558,"mtime":1613018871568,"results":"52","hashOfConfig":"34"},{"size":384,"mtime":1612706512306,"results":"53","hashOfConfig":"34"},{"size":1321,"mtime":1612099126927,"results":"54","hashOfConfig":"34"},{"size":4148,"mtime":1612700059921,"results":"55","hashOfConfig":"34"},{"size":2123,"mtime":1613018227412,"results":"56","hashOfConfig":"34"},{"size":3708,"mtime":1612700478988,"results":"57","hashOfConfig":"34"},{"size":4829,"mtime":1613210162852,"results":"58","hashOfConfig":"34"},{"size":3779,"mtime":1613210200259,"results":"59","hashOfConfig":"34"},{"size":928,"mtime":1612930547570,"results":"60","hashOfConfig":"34"},{"size":792,"mtime":1612706557293,"results":"61","hashOfConfig":"34"},{"size":570,"mtime":1612707168704,"results":"62","hashOfConfig":"34"},{"size":5138,"mtime":1613043158764,"results":"63","hashOfConfig":"34"},{"size":609,"mtime":1613041819468,"results":"64","hashOfConfig":"34"},{"size":237,"mtime":1613209751102,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1b2urkk",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\node\\ex_project\\client\\src\\index.js",[],["135","136"],"D:\\node\\ex_project\\client\\src\\App.js",[],"D:\\node\\ex_project\\client\\src\\reportWebVitals.js",[],"D:\\node\\ex_project\\client\\src\\Components\\Footer.js",[],"D:\\node\\ex_project\\client\\src\\Components\\Header.jsx",[],"D:\\node\\ex_project\\client\\src\\Pages\\HomePage.jsx",[],"D:\\node\\ex_project\\client\\src\\Components\\HomeBanner.jsx",[],"D:\\node\\ex_project\\client\\src\\Components\\HomeProducts.jsx",["137"],"D:\\node\\ex_project\\client\\src\\Redux\\storeConfig.js",["138"],"import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { cartReducer, orderDetailReducer, orderReducer, paymentReducer } from \"./Reducers/cartReducer\";\r\nimport { productListReducer, productReducer } from \"./Reducers/productReducer\";\r\nimport { signInReducer, userUpdateReducer } from \"./Reducers/userReducer\";\r\nimport { myorderListReducer } from \"./Reducers/orderReducer\";\r\nimport rootSaga from \"./Sagas/rootSaga\";\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [];\r\n\r\nconst initalState = {\r\n    signIn: { userInfo: null },\r\n    orders: { order: null }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    productList: productListReducer,\r\n    product: productReducer,\r\n    cart: cartReducer,\r\n    signIn: signInReducer,\r\n    orders: orderReducer,\r\n    payment: paymentReducer,\r\n    orderDetail: orderDetailReducer,\r\n    myOrders: myorderListReducer,\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, initalState, composeEnhancers(\r\n    applyMiddleware(sagaMiddleware, ...middlewares)\r\n));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","D:\\node\\ex_project\\client\\src\\Redux\\Reducers\\productReducer.js",[],"D:\\node\\ex_project\\client\\src\\Redux\\actionTypes.js",[],"D:\\node\\ex_project\\client\\src\\Components\\ProductMainSection.jsx",["139"],"D:\\node\\ex_project\\client\\src\\Pages\\ProductViewPage.jsx",[],"D:\\node\\ex_project\\client\\src\\Pages\\CartPage.jsx",["140"],"D:\\node\\ex_project\\client\\src\\Redux\\Reducers\\cartReducer.js",[],"D:\\node\\ex_project\\client\\src\\Pages\\LoginPage.jsx",[],"D:\\node\\ex_project\\client\\src\\Redux\\Reducers\\userReducer.js",[],"D:\\node\\ex_project\\client\\src\\Pages\\CheckoutPage.jsx",["141","142"],"import React, { useEffect, useState } from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../Redux/actionTypes';\r\n\r\nfunction CheckoutPage(props) {\r\n    const { userInfo } = props.signIn;\r\n\r\n    if (!userInfo) {\r\n        props.history.push('/login');\r\n    }\r\n\r\n    const { register, handleSubmit } = useForm();\r\n    const { cartItems } = props.cart;\r\n    const { order } = props.order;\r\n\r\n\r\n    const [promoCode, setPromoCode] = useState(\"\")\r\n    const [promoValue, setPromoValue] = useState(false)\r\n    const [name, setName] = useState(\"\")\r\n\r\n\r\n    const SubtotalPrice = cartItems.reduce((e, c) => e + c.price * c.qty, 0);\r\n    const shippingPrice = SubtotalPrice > 2000 ? 0 : 50;\r\n    const discontPrice = promoValue === true ? 200 : 0;\r\n    const totalPrice = SubtotalPrice + shippingPrice - discontPrice;\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (order) {\r\n\r\n            props.history.push(`/login?redirect=payment/${order._id}`)\r\n        }\r\n\r\n    }, [order])\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        props.saveOrder({\r\n            orderItems: props.cart.cartItems,\r\n            shippingAddress: data,\r\n            priceDetail: {\r\n                SubtotalPrice,\r\n                shippingPrice,\r\n                discontPrice,\r\n                totalPrice\r\n            }\r\n        },\r\n            userInfo.token\r\n        )\r\n\r\n    }\r\n\r\n    const handlePromoSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (promoCode === \"rancho\") {\r\n            setPromoValue(true)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div className=\"row g-3\">\r\n                    <div className=\"col-md-5 col-lg-4 order-md-last\">\r\n                        <h4 className=\"d-flex justify-content-between align-items-center mb-3\">\r\n                            <span className=\"text-muted\">Your cart</span>\r\n                            <span className=\"badge bg-secondary rounded-pill\">{cartItems.length}</span>\r\n                        </h4>\r\n                        <ul className=\"list-group mb-3\">\r\n                            {cartItems.map((item) =>\r\n                                <li className=\"list-group-item d-flex justify-content-between lh-sm\">\r\n                                    <div>\r\n                                        <h6 className=\"my-0\">{item.name}</h6>\r\n                                    </div>\r\n                                    <span className=\"text-muted\">&#8377;{item.price}</span>\r\n                                </li>\r\n                            )}\r\n                            <li className=\"list-group-item d-flex justify-content-between lh-sm\">\r\n                                <div>\r\n                                    <h6 className=\"my-0\">Shippping</h6>\r\n                                </div>\r\n                                <span className=\"text-muted\">&#8377;{shippingPrice}</span>\r\n                            </li>\r\n                            <li className=\"list-group-item d-flex justify-content-between bg-light\">\r\n                                <div className=\"text-success\">\r\n                                    <h6 className=\"my-0\">Promo code</h6>\r\n                                    <small>EXAMPLECODE</small>\r\n                                </div>\r\n                                <span className=\"text-success\">-{discontPrice}</span>\r\n                            </li>\r\n                            <li className=\"list-group-item d-flex justify-content-between\">\r\n                                <span>Total (USD)</span>\r\n                                <strong>{totalPrice}</strong>\r\n                            </li>\r\n                        </ul>\r\n                        <form className=\"card p-2\" onSubmit={(e) => handlePromoSubmit(e)}>\r\n                            <div className=\"input-group\">\r\n                                <input type=\"text\" onChange={(e) => setPromoCode(e.target.value)} className=\"form-control\" placeholder=\"Promo code\" />\r\n                                <button type=\"submit\" className=\"btn btn-secondary\">Redeem</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-md-7 col-lg-8\">\r\n                        <h4 className=\"mb-3\">Billing address</h4>\r\n                        <form className=\"needs-validation\" onSubmit={handleSubmit(onSubmit)} >\r\n                            <div className=\"row g-3\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <label htmlFor=\"firstName\" className=\"form-label\">Name</label>\r\n                                    <input type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"firstName\"\r\n                                        ref={register}\r\n                                        name=\"name\"\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                        placeholder\r\n                                        required />\r\n                                    <div className=\"invalid-feedback\">\r\n                                        Valid first name is required.\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <label htmlFor=\"address\" className=\"form-label\">Address</label>\r\n                                    <input type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        id=\"address\"\r\n                                        placeholder=\"\"\r\n                                        ref={register}\r\n                                        name=\"address\"\r\n                                        required />\r\n                                    <div className=\"invalid-feedback\">\r\n                                        Please enter your shipping address.\r\n                                 </div>\r\n                                </div>\r\n                                <div className=\"col-md-5\">\r\n                                    <label htmlFor=\"country\" className=\"form-label\">Country</label>\r\n                                    <select\r\n                                        ref={register}\r\n                                        name=\"country\"\r\n                                        className=\"form-select\"\r\n                                        id=\"country\"\r\n                                        required>\r\n                                        <option value>Choose...</option>\r\n                                        <option>United States</option>\r\n                                    </select>\r\n                                    <div className=\"invalid-feedback\">\r\n                                        Please select a valid country.\r\n                                 </div>\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <label htmlFor=\"state\" className=\"form-label\">State</label>\r\n                                    <select\r\n                                        ref={register}\r\n                                        name=\"state\"\r\n                                        className=\"form-select\"\r\n                                        id=\"state\" required>\r\n                                        <option value>Choose...</option>\r\n                                        <option>California</option>\r\n                                    </select>\r\n                                    <div className=\"invalid-feedback\">\r\n                                        Please provide a valid state.\r\n                                 </div>\r\n                                </div>\r\n                                <div className=\"col-md-3\">\r\n                                    <label htmlFor=\"zip\" className=\"form-label\">Zip</label>\r\n                                    <input type=\"text\"\r\n                                        ref={register}\r\n                                        name=\"zip\"\r\n                                        className=\"form-control\"\r\n                                        id=\"zip\"\r\n                                        placeholder\r\n                                        required />\r\n                                    <div className=\"invalid-feedback\">\r\n                                        Zip code required.\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr className=\"my-4\" />\r\n\r\n                            <button className=\"w-100 btn btn-primary btn-lg\" type=\"submit\">Proceed to Payment</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    signIn: state.signIn,\r\n    cart: state.cart,\r\n    order: state.orders\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n    saveOrder: (order, token) => dispatch({ type: actionTypes.SAVE_ORDER_REQUEST, order, token })\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutPage);\r\n","D:\\node\\ex_project\\client\\src\\Pages\\RegisterPage.jsx",[],"D:\\node\\ex_project\\client\\src\\Redux\\Sagas\\rootSaga.js",[],"D:\\node\\ex_project\\client\\src\\Redux\\Sagas\\productSaga.js",[],"D:\\node\\ex_project\\client\\src\\Redux\\Sagas\\cartSaga.js",[],"D:\\node\\ex_project\\client\\src\\Redux\\Sagas\\userSaga.js",[],"D:\\node\\ex_project\\client\\src\\Pages\\PaymentPage.js",["143","144"],"import React, { useEffect, useState } from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nfunction PaymentPage(props) {\r\n\r\n\r\n    const { order } = props.order;\r\n    const [sdkready, setSdkready] = useState(false)\r\n    const { userInfo } = props.signIn;\r\n    const { payment } = props.payment;\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (!order.isPaid) {\r\n            const script = document.createElement(\"script\");\r\n            script.type = \"text/javascript\";\r\n            script.src = `https://checkout.razorpay.com/v1/checkout.js`;\r\n            script.async = true;\r\n            script.onload = () => {\r\n                setSdkready(true)\r\n            }\r\n            document.body.appendChild(script)\r\n            if (sdkready) {\r\n                const token = userInfo.token;\r\n                props.rozorPay({\r\n                    amount: order.priceDetail.totalPrice,\r\n                    currency: \"INR\",\r\n                }, token)\r\n            }\r\n        }\r\n    }, [order, sdkready]);\r\n\r\n    useEffect(() => {\r\n        if(order.razorpay_payment_id){\r\n            props.history.push(`/login?redirect=order-detail/${order._id}`)\r\n            dispatch({type:\"CART_RESET\"})\r\n            dispatch({type:\"@ORDER_RESET\"})\r\n        }\r\n    }, [order.razorpay_payment_id])\r\n\r\n    const paymentHandler = () => {\r\n        if (payment) {\r\n            const options = {\r\n                key: payment.key,\r\n                amount: payment.amount,\r\n                currency: payment.currency,\r\n                name: \"Rozorpay Test Mode\",\r\n                description: \"Test Transaction\",\r\n                image: \"https://example.com/your_logo\",\r\n                order_id: payment.id,\r\n                handler: function (response) {\r\n                    props.savePaymentSuccess(order._id, {\r\n                        razorpay_payment_id: response.razorpay_payment_id,\r\n                        razorpay_order_id: response.razorpay_order_id,\r\n                        razorpay_signature: response.razorpay_signature\r\n                    }, userInfo.token)\r\n                },\r\n                prefill: {\r\n                    name: userInfo.name,\r\n                    email: userInfo.email,\r\n                    contact: userInfo.mobile\r\n                },\r\n                notes: {\r\n                    address: order.shippingAddress\r\n                }\r\n\r\n            };\r\n            console.log(options)\r\n            const paymentObject = new window.Razorpay(options);\r\n            paymentObject.open();\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row text-center\">\r\n                <div className=\"col-sm-12\">\r\n                    <div className=\"mb-5\">\r\n\r\n                    <p><strong>orderId: {order._id}</strong></p>\r\n\r\n                            <p><strong>Amount to be paid: Rs. {order.priceDetail.totalPrice} </strong></p>\r\n                    </div>\r\n             \r\n                    {!order.isPaid &&\r\n                        <button className=\"w-100 btn btn-primary btn-lg\" onClick={paymentHandler} type=\"button\">Make payment</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    order: state.orders,\r\n    signIn: state.signIn,\r\n    payment: state.payment\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    rozorPay: (options, token) => dispatch({ type: \"@ROZORPAY\", options, token }),\r\n    savePaymentSuccess: (orderId, paymentDetail, token) => dispatch({ type: \"@ROZORPAY_REQUEST\", orderId, paymentDetail, token })\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PaymentPage);","D:\\node\\ex_project\\client\\src\\Pages\\OrderDetailPage.jsx",["145"],"D:\\node\\ex_project\\client\\src\\UserPages\\MyOrders.jsx",["146"],"D:\\node\\ex_project\\client\\src\\Components\\DashbordHeader.jsx",[],"D:\\node\\ex_project\\client\\src\\Redux\\Sagas\\ordersSaga.js",[],"D:\\node\\ex_project\\client\\src\\Redux\\Reducers\\orderReducer.js",[],"D:\\node\\ex_project\\client\\src\\UserPages\\MyProfile.jsx",["147"],"import React, { useEffect, useState } from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport DashbordHeader from '../Components/DashbordHeader'\r\n\r\nfunction MyProfile(props) {\r\n\r\n    const { register, handleSubmit } = useForm();\r\n    const { updateSuccess, updateSuccessMsg, userInfo, loading, error } = props.signIn;\r\n    const dispatch = useDispatch();\r\n\r\n    const [name, setName] = useState(userInfo.name)\r\n    const [email, setEmail] = useState(userInfo.email)\r\n    const [mobile, setMobile] = useState(userInfo.mobile)\r\n    const [password, setPassword] = useState(userInfo.password)\r\n    const [cpassword, setCpassword] = useState(userInfo.password)\r\n\r\n    console.log(userInfo);\r\n    console.log(error)\r\n\r\n    const onSubmit = () => {\r\n        const token = userInfo.token;\r\n        if (password !== cpassword) {\r\n            alert(\"Confirm password not matched.\")\r\n        } else {\r\n            if (userInfo) {\r\n                props.updateUser({ userId: userInfo._id, name, email, mobile, password }, token);\r\n            }\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <DashbordHeader />\r\n            <div className=\"container my-5\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <h1 className=\"h1 mb-4 fw-normal\">Update Profile</h1>\r\n                    {updateSuccess &&\r\n                        <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n                            {updateSuccessMsg}\r\n                            <button type=\"button\" className=\"btn-close\" onClick={() => dispatch({ type: \"@REMOVE_ALERT\" })} data-bs-dismiss=\"alert\" aria-label=\"Close\" />\r\n                        </div>\r\n                    }\r\n                    <label htmlFor=\"name\" className=\"fw-bolder mb-1\">Name</label>\r\n                    <input type=\"name\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        className=\"form-control mb-3\"\r\n                        placeholder=\"Name\"\r\n                        ref={register}\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        required\r\n                        autoFocus\r\n                    />\r\n\r\n                    <label htmlFor=\"inputEmail\" className=\"fw-bolder mb-1\">Email address</label>\r\n                    <input type=\"email\"\r\n                        id=\"inputEmail\"\r\n                        className=\"form-control mb-3\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email address\"\r\n                        ref={register}\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n\r\n                    />\r\n\r\n                    <label htmlFor=\"inputEmail\" className=\"fw-bolder mb-1\">Mobile</label>\r\n                    <input type=\"number\"\r\n                        id=\"mobile\"\r\n                        className=\"form-control mb-3\"\r\n                        name=\"mobile\"\r\n                        placeholder=\"Mobile Number\"\r\n                        ref={register}\r\n                        value={mobile}\r\n                        onChange={(e) => setMobile(e.target.value)}\r\n                        required\r\n\r\n                    />\r\n\r\n                    <label htmlFor=\"inputPassword\" className=\"fw-bolder mb-1\">Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"inputPassword\"\r\n                        className=\"form-control mb-3\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        ref={register}\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n\r\n                    />\r\n                    <label htmlFor=\"inputPassword\" className=\"fw-bolder mb-1\">Confirm Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"inputPassword\"\r\n                        className=\"form-control mb-5\"\r\n                        placeholder=\"Confirm Password\"\r\n                        name=\"confirmpPassword\"\r\n                        value={cpassword}\r\n                        onChange={(e) => setCpassword(e.target.value)}\r\n                        required\r\n\r\n                    />\r\n\r\n                    <button className=\"w-100 btn btn-lg btn-primary\" type=\"submit\">{loading ? \"Loading\" : \"Update\"}</button>\r\n                    <button onClick={() => props.history.go(-1)} className=\"w-100 btn btn-lg btn-outline-dark mt-2\" type=\"button\">Back</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    signIn: state.signIn,\r\n\r\n\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    updateUser: (userData, token) => dispatch({ type: \"@GET_USERUPDATE_REQUEST\", userData, token })\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyProfile)\r\n","D:\\node\\ex_project\\client\\src\\Components\\PrivateRoute.js",[],"D:\\node\\ex_project\\client\\src\\Components\\Loading.jsx",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":14,"column":6,"nodeType":"154","endLine":14,"endColumn":8,"suggestions":"155"},{"ruleId":"156","severity":1,"message":"157","line":5,"column":25,"nodeType":"158","messageId":"159","endLine":5,"endColumn":42},{"ruleId":"152","severity":1,"message":"153","line":16,"column":6,"nodeType":"154","endLine":16,"endColumn":17,"suggestions":"160"},{"ruleId":"152","severity":1,"message":"153","line":19,"column":8,"nodeType":"154","endLine":19,"endColumn":24,"suggestions":"161"},{"ruleId":"156","severity":1,"message":"162","line":20,"column":12,"nodeType":"158","messageId":"159","endLine":20,"endColumn":16},{"ruleId":"152","severity":1,"message":"163","line":36,"column":8,"nodeType":"154","endLine":36,"endColumn":15,"suggestions":"164"},{"ruleId":"152","severity":1,"message":"165","line":33,"column":8,"nodeType":"154","endLine":33,"endColumn":25,"suggestions":"166"},{"ruleId":"152","severity":1,"message":"167","line":41,"column":8,"nodeType":"154","endLine":41,"endColumn":35,"suggestions":"168"},{"ruleId":"152","severity":1,"message":"169","line":19,"column":8,"nodeType":"154","endLine":19,"endColumn":10,"suggestions":"170"},{"ruleId":"152","severity":1,"message":"153","line":17,"column":8,"nodeType":"154","endLine":17,"endColumn":10,"suggestions":"171"},{"ruleId":"156","severity":1,"message":"172","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":26},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["175"],"no-unused-vars","'userUpdateReducer' is defined but never used.","Identifier","unusedVar",["176"],["177"],"'name' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["178"],"React Hook useEffect has missing dependencies: 'props' and 'userInfo.token'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["179"],"React Hook useEffect has missing dependencies: 'dispatch', 'order._id', and 'props.history'. Either include them or remove the dependency array.",["180"],"React Hook useEffect has missing dependencies: 'orderId', 'props', and 'userInfo.token'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["181"],["182"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"183","fix":"197"},"Update the dependencies array to be: [props]",{"range":"198","text":"199"},"Update the dependencies array to be: [productId, props]",{"range":"200","text":"201"},"Update the dependencies array to be: [productId, props, qty]",{"range":"202","text":"203"},"Update the dependencies array to be: [order, props.history]",{"range":"204","text":"205"},"Update the dependencies array to be: [order, props, sdkready, userInfo.token]",{"range":"206","text":"207"},"Update the dependencies array to be: [dispatch, order._id, order.razorpay_payment_id, props.history]",{"range":"208","text":"209"},"Update the dependencies array to be: [orderId, props, userInfo.token]",{"range":"210","text":"211"},{"range":"212","text":"199"},[406,408],"[props]",[526,537],"[productId, props]",[587,603],"[productId, props, qty]",[1030,1037],"[order, props.history]",[1024,1041],"[order, props, sdkready, userInfo.token]",[1293,1320],"[dispatch, order._id, order.razorpay_payment_id, props.history]",[443,445],"[orderId, props, userInfo.token]",[472,474]]